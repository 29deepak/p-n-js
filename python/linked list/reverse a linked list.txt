class Node:
    def __init__(self,data):
        self.data=data
        self.next=None
class LinkedList:
    def __init__(self):
        self.head=None
    def add_begin(self,data):
        new_node=Node(data)
        new_node.next=self.head
        self.head=new_node
        # print(new_node.data)
    def add_end(self,data):
        n=self.head
        new_node=Node(data)
        while n.next is not None:
            n=n.next
        n.next = new_node
        # print(new_node.data)
    def delete_node(self,x):
        n=self.head
        while n.next is not None:
            if(x==n.next.data):
                break
            n=n.next
        n.next=n.next.next
    def reverse_list(self):
        prev=None
        current = self.head
        while current is not None:
            next = current.next
            current.next=prev
            prev =current
            current = next
        self.head=prev
            
    def printList(self):
        n = self.head
        while(n):
           print(n.data)
           n=n.next
        
ll1=LinkedList()
ll1.add_begin(30)
ll1.add_begin(20)
ll1.add_begin(10)
ll1.add_end(40)
ll1.printList()
ll1.reverse_list()
ll1.printList()